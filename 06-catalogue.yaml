- name: catalogue setup
  hosts: catalogue
  become: yes
  tasks:
    - name: disable default node js module
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs 20 
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: create roboshop system user
      ansible.builtin.user:
        name: roboshop
        comment: Roboshop System user
        system: true
        shell: /sbin/nologin
        home: /app

    - name: create app directory 
      ansible.builtin.file:
        state: directory
        path: /app

    - name: downloading repo
      ansible.builtin.get_url: 
        url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
        dest: /tmp/catalogue.zip

    - name: unzipping repo
      ansible.builtin.unarchive: # unarchive means unzipping, archive means zipping
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: install dependencies
      community.general.npm:
        path: /app

    - name: copying service file 
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name: copying mongo repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    # - name: reloading daemon
    #   ansible.builtin.command: systemctl daemon-reload

    # - name: starting systemcl services
    #   ansible.builtin.service:
    #     name: catalogue 
    #     enabled: yes
    #     state: present

    - name: install mangodb-mongosh
      ansible.builtin.package:
        name: mongodb-mongosh
        state: present

    - name: connect to mongodb catalogue
      community.mongodb.mongodb_shell:
        eval: db.getMongo().getDBNames().indexOf('catalogue')
      register: catalogue_output

    - name: print catalogue catalogue_output
      ansible.builtin.debug:
        msg: "{{ catalogue_output }}"

    


  